service: zsmseven-options-trades-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    TRADES_TABLE: options-trades-${self:provider.stage}
    USERS_TABLE: users-${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET, 'LJCIuri7XhEJZne4KvTzbqPzyEfmPFYC9a4ISxhfu3U='}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TRADES_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TRADES_TABLE}/index/*
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}

functions:
  listTrades:
    handler: dist/handlers/listTrades.handler
    events:
      - http:
          path: /
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  listOpenTrades:
    handler: dist/handlers/listOpenTrades.handler
    events:
      - http:
          path: /open
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  getTrade:
    handler: dist/handlers/getTrade.handler
    events:
      - http:
          path: /{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  createTrade:
    handler: dist/handlers/createTrade.handler
    events:
      - http:
          path: /
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  closeTrade:
    handler: dist/handlers/closeTrade.handler
    events:
      - http:
          path: /{id}/close
          method: put
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  updateTrade:
    handler: dist/handlers/updateTrade.handler
    events:
      - http:
          path: /{id}
          method: put
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  deleteTrade:
    handler: dist/handlers/deleteTrade.handler
    events:
      - http:
          path: /{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

resources:
  Resources:
    OptionsTradesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TRADES_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: symbol
            AttributeType: S
          - AttributeName: portfolioId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: UserStatusIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: status
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: SymbolIndex
            KeySchema:
              - AttributeName: symbol
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: PortfolioIdIndex
            KeySchema:
              - AttributeName: portfolioId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-domain-manager

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node20
    platform: node

  customDomain:
    domainName: ${self:custom.domain.${self:provider.stage}}
    basePath: 'trades'
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: REGIONAL

  domain:
    dev: api.zsmproperties.com
    prod: api.zsmproperties.com
