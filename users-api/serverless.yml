service: zsmseven-users-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  logRetentionInDays: 7
  environment:
    USERS_TABLE: users-${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET, 'LJCIuri7XhEJZne4KvTzbqPzyEfmPFYC9a4ISxhfu3U='}
    JWT_REFRESH_SECRET: ${env:JWT_REFRESH_SECRET, 'MnGsOxlkWGp10VEf9t9zG00GSgvnsJ15obbdumz+gm4='}
    JWT_EXPIRES_IN: '1h'
    JWT_REFRESH_EXPIRES_IN: '7d'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}/index/*

functions:
  listUsers:
    handler: dist/handlers/listUsers.handler
    events:
      - http:
          path: /
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  getUser:
    handler: dist/handlers/getUser.handler
    events:
      - http:
          path: /{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  createUser:
    handler: dist/handlers/createUser.handler
    events:
      - http:
          path: /
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  updateUser:
    handler: dist/handlers/updateUser.handler
    events:
      - http:
          path: /{id}
          method: put
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  deleteUser:
    handler: dist/handlers/deleteUser.handler
    events:
      - http:
          path: /{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

# Note: We don't define the UsersTable resource here because it's already
# created by the auth-api service. Both services share the same users table.

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node20
    platform: node
