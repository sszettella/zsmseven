service: zsmseven-auth-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    USERS_TABLE: users-${self:provider.stage}
    BLACKLIST_TABLE: token-blacklist-${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET, 'LJCIuri7XhEJZne4KvTzbqPzyEfmPFYC9a4ISxhfu3U='}
    JWT_REFRESH_SECRET: ${env:JWT_REFRESH_SECRET, 'MnGsOxlkWGp10VEf9t9zG00GSgvnsJ15obbdumz+gm4='}
    JWT_EXPIRES_IN: '1h'
    JWT_REFRESH_EXPIRES_IN: '7d'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}/index/*
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BLACKLIST_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.BLACKLIST_TABLE}/index/*

functions:
  login:
    handler: dist/handlers/login.handler
    events:
      - http:
          path: login
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  register:
    handler: dist/handlers/register.handler
    events:
      - http:
          path: register
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  refreshToken:
    handler: dist/handlers/refreshToken.handler
    events:
      - http:
          path: refresh
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  getMe:
    handler: dist/handlers/getMe.handler
    events:
      - http:
          path: me
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

  logout:
    handler: dist/handlers/logout.handler
    events:
      - http:
          path: logout
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: false

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    TokenBlacklistTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BLACKLIST_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: expiresAt
          Enabled: true

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-domain-manager

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node20
    platform: node

  customDomain:
    domainName: ${self:custom.domain.${self:provider.stage}}
    basePath: 'auth'
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: REGIONAL
    autoDomain: false

  domain:
    dev: api.zsmproperties.com
    prod: api.zsmproperties.com
