name: Deploy All APIs

on:
  push:
    branches:
      - main
      - develop
    paths:
      # Only trigger deploy-all automatically when workflow files change
      # Individual API workflows handle their own targeted deployments
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage (auto-detected from branch if triggered by push)'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - dev
          - prod

jobs:
  deploy-auth-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          cd auth-api
          npm install

      - name: Build TypeScript
        run: |
          cd auth-api
          npm run build

      - name: Deploy Auth API
        run: |
          cd auth-api
          # Determine stage: use input if manual dispatch, otherwise use branch
          if [ "${{ github.event.inputs.stage }}" = "auto" ] || [ -z "${{ github.event.inputs.stage }}" ]; then
            STAGE=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          else
            STAGE=${{ github.event.inputs.stage }}
          fi
          echo "Deploying to stage: $STAGE"
          serverless deploy --stage $STAGE
        env:
          JWT_SECRET: ${{ (github.event.inputs.stage == 'prod' || github.ref == 'refs/heads/main') && secrets.PROD_JWT_SECRET || secrets.DEV_JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ (github.event.inputs.stage == 'prod' || github.ref == 'refs/heads/main') && secrets.PROD_JWT_REFRESH_SECRET || secrets.DEV_JWT_REFRESH_SECRET }}

  deploy-users-api:
    runs-on: ubuntu-latest
    needs: deploy-auth-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          cd users-api
          npm install

      - name: Build TypeScript
        run: |
          cd users-api
          npm run build

      - name: Deploy Users API
        run: |
          cd users-api
          # Determine stage: use input if manual dispatch, otherwise use branch
          if [ "${{ github.event.inputs.stage }}" = "auto" ] || [ -z "${{ github.event.inputs.stage }}" ]; then
            STAGE=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          else
            STAGE=${{ github.event.inputs.stage }}
          fi
          echo "Deploying to stage: $STAGE"
          serverless deploy --stage $STAGE
        env:
          JWT_SECRET: ${{ (github.event.inputs.stage == 'prod' || github.ref == 'refs/heads/main') && secrets.PROD_JWT_SECRET || secrets.DEV_JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ (github.event.inputs.stage == 'prod' || github.ref == 'refs/heads/main') && secrets.PROD_JWT_REFRESH_SECRET || secrets.DEV_JWT_REFRESH_SECRET }}

  deploy-options-trades-api:
    runs-on: ubuntu-latest
    needs: deploy-auth-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          cd options-trades-api
          npm install

      - name: Build TypeScript
        run: |
          cd options-trades-api
          npm run build

      - name: Deploy Options Trades API
        run: |
          cd options-trades-api
          # Determine stage: use input if manual dispatch, otherwise use branch
          if [ "${{ github.event.inputs.stage }}" = "auto" ] || [ -z "${{ github.event.inputs.stage }}" ]; then
            STAGE=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          else
            STAGE=${{ github.event.inputs.stage }}
          fi
          echo "Deploying to stage: $STAGE"
          serverless deploy --stage $STAGE
        env:
          JWT_SECRET: ${{ (github.event.inputs.stage == 'prod' || github.ref == 'refs/heads/main') && secrets.PROD_JWT_SECRET || secrets.DEV_JWT_SECRET }}

  deploy-portfolio-api:
    runs-on: ubuntu-latest
    needs: deploy-auth-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          cd portfolio-api
          npm install

      - name: Build TypeScript
        run: |
          cd portfolio-api
          npm run build

      - name: Deploy Portfolio API
        run: |
          cd portfolio-api
          # Determine stage: use input if manual dispatch, otherwise use branch
          if [ "${{ github.event.inputs.stage }}" = "auto" ] || [ -z "${{ github.event.inputs.stage }}" ]; then
            STAGE=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          else
            STAGE=${{ github.event.inputs.stage }}
          fi
          echo "Deploying to stage: $STAGE"
          serverless deploy --stage $STAGE
        env:
          JWT_SECRET: ${{ (github.event.inputs.stage == 'prod' || github.ref == 'refs/heads/main') && secrets.PROD_JWT_SECRET || secrets.DEV_JWT_SECRET }}

  deploy-summary:
    runs-on: ubuntu-latest
    needs: [deploy-auth-api, deploy-users-api, deploy-options-trades-api, deploy-portfolio-api]
    steps:
      - name: Deployment Summary
        run: |
          # Determine stage and domain
          if [ "${{ github.event.inputs.stage }}" = "auto" ] || [ -z "${{ github.event.inputs.stage }}" ]; then
            STAGE=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
            DOMAIN=${{ github.ref == 'refs/heads/main' && 'api.zsm7.com' || 'api.zsmproperties.com' }}
          else
            STAGE=${{ github.event.inputs.stage }}
            if [ "$STAGE" = "prod" ]; then
              DOMAIN="api.zsm7.com"
            else
              DOMAIN="api.zsmproperties.com"
            fi
          fi

          echo "âœ… All APIs deployed successfully!"
          echo ""
          echo "Branch: ${{ github.ref_name }}"
          echo "Stage: $STAGE"
          echo "Domain: $DOMAIN"
          echo ""
          echo "API Endpoints:"
          echo "  Auth API: https://$DOMAIN/auth"
          echo "  Users API: https://$DOMAIN/users"
          echo "  Options Trades API: https://$DOMAIN/trades"
          echo "  Portfolio API: https://$DOMAIN/portfolios"
